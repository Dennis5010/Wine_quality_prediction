# -*- coding: utf-8 -*-
"""WineQT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CU0yVI6cR88kaZv8HAu6esXyoFKa8PAB
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv(r'/content/WineQT.csv')

df.head()

df.describe()

df.rename(columns={'fixed acidity':'fixed_acidity','volatile acidity':'volatile_acidity','citric acid':'citric_acid','residual sugar':'residual_sugar','free sulfur dioxide':'free_sulfur_dioxide','total sulfur dioxide':'total_sulfur_dioxide'},inplace=True)

df.head()

df.drop(columns='Id',inplace=True)

df.index.rename('Id',inplace=True)

df.head()

df.isnull().sum()

df.corr()

correlation_matrix = df.corr().round(2)
fig, ax = plt.subplots(figsize=(20,8))
sns.heatmap(data=correlation_matrix, annot=True,ax=ax)

duplicate = df[df.duplicated()]
print("Duplicate Rows :")
duplicate

df = df.drop_duplicates()

plt.hist(x=df['fixed_acidity'],bins=30)
plt.show()

plt.scatter(x=df['density'],y=df['fixed_acidity'])
plt.xlabel('density')
plt.ylabel('Fixed_acidity')
plt.show()

plt.scatter(x=df['fixed_acidity'],y=df['citric_acid'])
plt.xlabel('fixed_acidity')
plt.ylabel('citric_acidity')
plt.show()

sns.countplot(df['quality'],label='count')
plt.show()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix

y = df['quality']

X = df.drop('quality',axis=1)

X_train, X_test, y_train, y_test = train_test_split(X, y)

"""# **LINEAR REGRESSION**"""

regr = LinearRegression()
  
regr.fit(X_train, y_train)
print(regr.score(X_test, y_test))

"""# **LOGISTIC REGRESSION**"""

logreg = LogisticRegression()

logreg.fit(X_train,y_train)

print(logreg.score(X_test,y_test))

"""# **KNEAREST NEIGHBOUR**"""

knn = KNeighborsClassifier(n_neighbors=5)

knn.fit(X_train,y_train)

print(knn.score(X_test,y_test))

